version: '3.8'

services:
  api:
    container_name: api
    build:
      context: ./backend
    volumes:
      - ./backend:/app
      - ./frontend/src:/frontend/src
    environment:
      DB_HOST: db
      DB_USER: admin
      DB_PASSWORD: 1234
      DB_NAME: syb
    depends_on:
      - db
    networks:
      - app_network
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/src:/usr/share/nginx/html
    ports:
      - "8080:80"
    depends_on:
      - api
    networks:
      - app_network
    restart: unless-stopped

  nginx_exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx_exporter
    ports:
      - "9113:9113"
    environment:
      NGINX_STATUS_URL: "http://nginx/metrics"
    depends_on:
      - nginx
    networks:
      - app_network
    restart: unless-stopped

  db:
    image: mariadb:10.6
    container_name: db
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    environment:
      MARIADB_ROOT_PASSWORD: root
      MYSQL_PASSWORD: 1234
      MYSQL_DATABASE: syb
      MYSQL_USER: admin
    ports:
    - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app_network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - app_network
    restart: unless-stopped

  elasticsearch:
    image: elasticsearch:7.9.1
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - test_data:/usr/share/elasticsearch/data/
      - ./elk-config/elasticsearch/elasticsearch.yaml:/usr/share/elasticsearch/config/elasticsearch.yaml
    environment:
      - discovery.type=single-node
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
    networks:
      - app_network

  logstash:
    image: logstash:7.9.1
    container_name: logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./elk-config/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./elk-config/logstash/logstash.yaml:/usr/share/logstash/config/logstash.yaml
      - ls_data:/usr/share/logstash/data

    networks:
      - app_network
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:7.9.1
    container_name: kibana
    ports:
      - "5601:5601"
    volumes:
      - ./elk-config/kibana/kibana.yaml:/usr/share/kibana/config/kibana.yaml
      - kb_data:/usr/share/kibana/data
    networks:
      - app_network
    depends_on:
      - elasticsearch

networks:
  app_network:
    driver: bridge

volumes:
  db_data:
  grafana_data:
  test_data:
  ls_data:
  kb_data:
